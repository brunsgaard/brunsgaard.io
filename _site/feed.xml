<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>brunsgaard.io</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://brunsgaard.io/</link>
    <atom:link href="http://brunsgaard.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 03 Jun 2016 15:15:19 +0200</pubDate>
    <lastBuildDate>Fri, 03 Jun 2016 15:15:19 +0200</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;Youâ€™ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and
re-build the site to see your changes. You can rebuild the site in many
different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which
launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows
the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front
matter. Take a look at the source for this post to get an idea about how it
works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RedisConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Redis connection.&quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asyncio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_event_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_waiters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hiredis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;protocolError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProtocolError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                      &lt;span class=&quot;n&quot;&gt;replyError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReplyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader_task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;async_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_read_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_closing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_closed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_close_waiter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_future&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader_task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_done_callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_close_waiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_in_transaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_transaction_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# XXX: never used?&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_in_pubsub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pubsub_channels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coerced_keys_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_pubsub_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coerced_keys_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__repr__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&amp;lt;RedisConnection [db:{}]&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@asyncio.coroutine&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_read_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Response reader task.&quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_reader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;at_eof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;self._reader.read&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;MAX_CHUNK_SIZE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;            &lt;span class=&quot;nn&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;asyncio.CancelledError&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;            &lt;span class=&quot;nn&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;XXX&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;QUIT&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;       &lt;span class=&quot;nn&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;logger.error&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&quot;&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc_info&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;            &lt;span class=&quot;nn&quot;&gt;self._parser.feed&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;            &lt;span class=&quot;nn&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;self._parser.gets&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;()
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ProtocolError&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                    &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ProtocolError&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fatal&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                    &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;closed&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;self._closing&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;self._loop.call_soon&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;self._do_close&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;self._in_transaction&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                        &lt;span class=&quot;nn&quot;&gt;self._transaction_error&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;exc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                &lt;span class=&quot;nn&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                        &lt;span class=&quot;nn&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;self._in_pubsub&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                        &lt;span class=&quot;nn&quot;&gt;self._process_pubsub&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;                    &lt;span class=&quot;nn&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:
&lt;/span&gt;                        &lt;span class=&quot;nn&quot;&gt;self._process_data&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;        &lt;span class=&quot;nn&quot;&gt;self._closing&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;        &lt;span class=&quot;nn&quot;&gt;self._loop.call_soon&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;self._do_close&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the
most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyllâ€™s GitHub
repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll
Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 03 Jun 2016 14:27:39 +0200</pubDate>
        <link>http://brunsgaard.io/jekyll/update/2016/06/03/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://brunsgaard.io/jekyll/update/2016/06/03/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
